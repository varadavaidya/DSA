class Queue(object):
    def __init__(self,maxSize):
        self.list=maxSize*[None]
        self.maxSize=maxSize
        self.start=-1
        self.top=-1

    def __str__(self):
        values=[str(x) for x in self.list]
        return ' '.join(values)

    def isFull(self):
        if self.top+1==self.start:
            return True
        elif self.start==0 and self.top+1==self.maxSize:
            return True
        else:
            return False

    def isEmpty(self):
        if self.top==self.start:
            return True
        else:
            return False

    def enqueue(self,value):
        if self.isFull():
            return "The queue is full."
        else:
            if self.top+1==self.maxSize:
                self.top=0
            else:
                self.top += 1
                if self.start==-1:
                    self.start=0
            self.list[self.top]=value
            return "The element inserted at the end of Queue."

    def dequeue(self):
        if self.isEmpty():
            return "No element in queue"
        else:
            firstElement=self.list[self.start]
            start=self.start
            if self.start==self.top:
                self.start = -1
                self.top=-1
            elif self.start+1==self.maxSize:
                self.start=0
            else:
                self.start+=1
            self.list[start]=None
            return firstElement

    def peek(self):
        return self.list[self.start]
    
    def delete(self):
        self.list=self.maxSize*[None]
        self.top=-1
        self.start=-1
        


custom_queue=Queue(5)
print(custom_queue.isFull())
print(custom_queue.isEmpty())
custom_queue.enqueue(10)
custom_queue.enqueue(20)
custom_queue.enqueue(30)
custom_queue.enqueue(40)
custom_queue.enqueue(50)
print(custom_queue)
print(custom_queue.isFull())
print(custom_queue.enqueue(60))
print(custom_queue.enqueue(70))
print(custom_queue)
custom_queue.dequeue()
print(custom_queue)
print(custom_queue.peek())
